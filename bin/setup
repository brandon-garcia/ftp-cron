#!/bin/bash

source $1
ORIG_DIR="$(pwd)"
__proj=$(cd $(dirname "$(dirname ${BASH_SOURCE[0]})") && pwd)
__bin="$__proj/bin"
__data="$__proj/data"
cd $ORIG_DIR

mkdir -p $__data $__data/.mirror
mkdir -p $__data/new $__data/upload
mkdir -p $__data/backup $__data/backup/modified $__data/backup/original

sync_args=" -c --verbose"
lftp_script=""

prm_ldir=" $__data/.mirror"
prm_rdir=" ${remote_dir}"
prm_del=" -e" #only on mirror
prm_empty_dirs=""
prm_pdownloads=""
prm_psearch=""
prm_nomod=""

if [[ "$create_empty_dirs" == "false" ]]; then
    prm_empty_dirs=" --no-empty-dirs"
fi

if [[ "$parallel_downloads" -gt "1" ]]; then
    prm_pdownloads=" --parallel=$parallel_downloads"
fi

if [[ "$parallel_search" == "true" ]]; then
    prm_psearch="set mirror:parallel-directories true;"
fi

if [[ "$only_missing" == "true" ]]; then
    prm_nomod=" --only-missing"
fi

rm -f $__bin/.config
echo "sync_args=\"${sync_args} ${prm_del}${prm_empty_dirs}${prm_pdownloads}${prm_nomod}${prm_rdir}${prm_ldir}\"" > $__bin/.config
echo "remote_auth=\""${remote_user}","${remote_pass}" ${remote_host}\"" >> $__bin/.config
echo "lftp_script=\"${prm_psearch}\"" >> $__bin/.config

echo "__proj=$__proj" >> $__bin/.config
echo "__bin=$__bin" >> $__bin/.config
echo "__data=$__data" >> $__bin/.config
echo "email_notify=${email_notify}" >> $__bin/.config
if [[ "{$email_notify}" == "true" ]]; then
    echo "email_to=\"${email_to}\"" >> $__bin/.config
    echo "email_from=\"${email_from}\"" >> $__bin/.config
fi
